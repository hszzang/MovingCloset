<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mybatis.MybatisProductImpl">
<!-- 관리자 모드 메인에 불러오기 -->
<!--	<select id="StoreList" resultType="mybatis.ProductAndDetailDTO">   -->
	<select id="StoreList" resultType="mybatis.ProductAndDetailDTO">
		SELECT p.*, d.*
		FROM product p, product_detail d
		WHERE p.p_code=d.p_code 
		AND p_idx BETWEEN #{start} AND #{end}
		ORDER BY p_idx DESC
	</select>
	
<!-- 관리자 모드에서 뉴디 불러오기(임시) 
		SELECT p.*
		FROM product p, product_detail d
		WHERE p.p_code=d.p_code
		AND p_flag='뉴디'
		ORDER BY p_idx DESC
-->
	<select id="NewDList" resultType="mybatis.ProductAndDetailDTO">
		SELECT p.*, d.*
		FROM product p, product_detail d
		WHERE p.p_code=d.p_code
		AND p_flag='뉴디'
		ORDER BY p_idx DESC
	</select>
	<!--  
		SELECT * FROM (
		SELECT Tb.*, ROWNUM rNum FROM (
			SELECT * FROM product
			WHERE p_flag='뉴디'
			<choose>
				<when test='order=="asc"'>
					ORDER BY p_price DESC
				</when>
				<when test='order=="desc"'>
					ORDER BY p_price ASC
				</when>
				<otherwise>
					ORDER BY p_idx ASC
				</otherwise>
			</choose>
			)Tb
		)
		ORDER BY rNum desc
		-->
	<select id="getProductDTO" resultType="mybatis.ProductDTO">
		SELECT * FROM product WHERE p_idx=#{p_idx}
	</select>
	<!-- 리스트 (전체최근순) -->
	<select id="getStoreList" parameterType="int" resultType="mybatis.ProductDTO">
		SELECT * FROM product 
		ORDER BY p_idx DESC
	</select>

	<!-- 페이징 적용된 리스트 + 신상품/가격정렬 + 플래그 분류 적용 -->
	<select id="getPagedList" resultType="mybatis.ProductAndDetailDTO">  
				SELECT * FROM ( 		
				SELECT Tb.*, ROWNUM rNum FROM ( 
				      SELECT * FROM product
				      <choose>
				      	<when test='flag=="all" or flag==null'>
				      		WHERE p_flag!='뉴디'
				      	</when>
				      	<when test='flag!=null'>
				     		WHERE p_flag=#{flag} AND p_flag!='뉴디'
				     	</when>
				      </choose>
						<choose>
							<when test='order=="asc"'>
								ORDER BY p_price DESC
							</when>
							<when test='order=="desc"'>
								ORDER BY p_price ASC
							</when>
							<otherwise>
								ORDER BY p_idx ASC
							</otherwise>
						</choose>
						)Tb
				    ) 
				WHERE rNum BETWEEN #{start} AND #{end}
				ORDER BY rNum desc
				
	</select>	
	
<!-- 페이징 위한 갯수 카운트 플래그 없으면 모든 상품, 플래그 있으면 해당 플래그 상품만 -->
	<select id="getCount" parameterType="String" resultType="int">
		<choose>
			<when test='flag==null or flag=="all"'>
				SELECT COUNT(*) FROM product WHERE p_flag!='뉴디'
			</when>
			<otherwise>
				SELECT COUNT(*) FROM product WHERE p_flag=#{flag}
			</otherwise>
		</choose>
	</select>
<!-- 뉴디 카운트 -->
	<select id="getNewDCount" resultType="int">
		SELECT COUNT(*) FROM product WHERE p_flag='뉴디' 
	</select>	
	
	<!-- 상품 입력 -->
	<insert id="insertProduct" parameterType="mybatis.ProductDTO" >
		INSERT INTO product(p_idx, p_name, p_code, p_price, p_brand, p_ofile, p_sfile, p_flag)
		VALUES
		(product_seq.nextval, #{p_name}, #{p_code}, #{p_price}, #{p_brand}, #{p_ofile}, #{p_sfile}, #{p_flag})
	</insert>
	<!-- 디테일 입력 -->
	<insert id="insertDetail" parameterType="mybatis.ProductDetailDTO">
		INSERT INTO product_detail(p_code, pd_color, pd_size, pd_stock)
		VALUES (#{p_code}, #{pd_color}, #{pd_size}, #{pd_stock})
	</insert>
	
	<!-- product 에서 상세정보 가져오기 -->
	<select id="getStoreDetail" resultType="mybatis.ProductDTO">
		SELECT * FROM product WHERE p_idx=#{p_idx}
	</select>
	<!-- product_detail 에서 상세정보 사이즈 가져오기 -->
	<select id="getProductDetail" resultType="mybatis.ProductDetailDTO">
		SELECT * FROM product_detail WHERE p_code=#{p_code}
	</select>
	
	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="mybatis.ProductDTO" >
		UPDATE product SET p_name=#{p_name}, p_code=#{p_code}, p_price=#{p_price}, p_brand=#{p_brand}, p_ofile=#{p_ofile}, p_sfile=#{p_sfile} WHERE p_idx=#{p_idx}
	</update>
	<!-- 디테일 수정 -->
	<update id="updateDetail" parameterType="mybatis.ProductDetailDTO">
		UPDATE product_detail SET pd_color=#{pd_color}, pd_size=#{pd_size}, pd_stock=#{pd_stock} WHERE p_code=#{p_code}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="deleteProduct">
		DELETE FROM product WHERE p_idx=#{p_idx}
	</delete>
	<!-- 디테잏 삭제 -->
	<delete id="deleteDetail">
		DELETE FROM product_detail WHERE p_code=#{p_code}
	</delete>

	<!-- 리뷰들 불러오기 -->
	<select id="getReviews" resultType="mybatis.ReviewDTO">
		SELECT * FROM review WHERE p_code=#{p_code}
	</select>
	
	<!-- 리뷰쓰기 -->
	<insert id="insertReview" parameterType="mybatis.ReviewDTO" >
		INSERT INTO review(p_code, r_rate, r_content, userid, r_date, r_ofile, r_sfile, r_idx, rt_fabric, rt_fit, rt_size, rt_finish)
		VALUES
		(#{p_code}, #{r_rate}, #{r_content}, #{userid}, sysdate, #{r_ofile}, #{r_sfile}, review_seq.nextval, #{rt_fabric}, #{rt_fit}, #{rt_size}, #{rt_finish})
	</insert>

	<!-- 리뷰쓰기(첨부파일 없음) -->
	<insert id="insertReviewNoFile" parameterType="mybatis.ReviewDTO" >
		INSERT INTO review(p_code, r_rate, r_content, userid, r_date, r_idx, rt_fabric, rt_fit, rt_size, rt_finish)
		VALUES
		(#{p_code}, #{r_rate}, #{r_content}, #{userid}, sysdate, review_seq.nextval, #{rt_fabric}, #{rt_fit}, #{rt_size}, #{rt_finish})
	</insert>

	
	
	<!-- 리뷰 수정(한줄평, 사진) -->
	<update id="updateReview" parameterType="mybatis.ReviewDTO">
		UPDATE review 
		SET r_content=#{r_content}, r_ofile=#{r_ofile}, r_sfile=#{r_sfile}
		WHERE p_code=#{p_code} AND r_idx=#{r_idx} AND userid=#{userid}
	</update>

	<!-- 리뷰 수정(한줄평
	) -->
	<update id="updateReviewNoFile" parameterType="mybatis.ReviewDTO">
		UPDATE review 
		SET r_content=#{r_content}
		WHERE p_code=#{p_code} AND r_idx=#{r_idx} AND userid=#{userid}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview">
		<!--  DELETE FROM review WHERE p_code=#{p_code}, r_code=#{r_code} AND userid=#{userid} -->
		DELETE FROM review WHERE r_idx=#{0}
	</delete>
	<select id="getPidx" >
		SELECT p_idx FROM product WHERE p_code=#{0}
	</select>
	
	
	<!-- 리뷰 페이지 진입시 띄울 정보 가져오기 -->
	<select id="reviewList" resultType="mybatis.ProductAndDetailDTO">
	 	SELECT * FROM product p INNER JOIN product_detail pd
   	 	ON p.p_code = pd.p_code WHERE p_idx = #{p_idx}
	</select>
	
	<!-- 구매내역과 리뷰페이지 버튼 보임/숨김 처리 연결 -->
	
	<select id="buyReview" resultType="mybatis.BuyAndGroupDTO">
	SELECT distinct bg.p_code as p_code, userid
	FROM product_detail P
	    INNER JOIN buy_group bg
	    ON P.p_code = bg.p_code
	    INNER JOIN buy b
	    ON bg.b_idx = b.b_idx
	WHERE userid = #{0} and bg.p_code = #{1}
	</select>
	
	<!-- 구매폼(buy) insert -->
	<insert id="insertBuyForm" parameterType="mybatis.BuyAndGroupDTO" >
		
		INSERT INTO BUY (B_IDX, B_TOTALPAY, B_DATE, B_BUYER, B_PHONE, B_POSTCODE, B_ADDR, B_PAYMENT, B_WAYBILL, USERID,EMAIL,accountnumber)
		VALUES (buy_seq.nextval,#{b_totalpay},sysdate,#{b_buyer},#{b_phone},#{b_postcode},#{b_addr},#{b_payment},#{b_waybill},#{userid},#{email},#{accountnumber} )
		<selectKey keyProperty="b_idx" order="AFTER" resultType="String">
			select buy_seq.CURRVAL from dual
		</selectKey>
				
	</insert>
	
	<!-- 구매폼(buy_group)에 insert -->
	<insert id="insertBuy_groupForm" parameterType="mybatis.BuyAndGroupDTO" >

		<choose>
			<when test="#{cou_code} != null">
				insert into buy_group(BD_IDX, P_CODE, COU_CODE, B_IDX, BD_COUNT, BD_SIZE) 
				values (buygroup_seq.nextval, #{p_code},#{cou_code},#{b_idx},#{bd_count},#{bd_size})					
			</when>
			<otherwise>
				insert into buy_group(BD_IDX, P_CODE, B_IDX, BD_COUNT, BD_SIZE) 
				values (buygroup_seq.nextval, #{p_code},#{b_idx},#{bd_count},#{bd_size})		
			</otherwise>
		</choose>
	</insert>

	
	<select id="getbuyAndGroup"  resultType="mybatis.BuyAndGroupDTO">
	
		select *
		from buy b
		inner join buy_group bg
		on b.b_idx = bg.b_idx
		inner join product p
		on bg.p_code = p.p_code
		where b.b_idx = #{b_idx}
	
	</select>
	
	<select id="getMaxBidx" resultType="int">
		select max(b_idx)
		from buy
	</select>
	
	
	

	<!-- 마이페이지 리뷰리스트 가져오기 -->
	<select id="mypageReviewList" resultType="mybatis.ReviewDTO">
		SELECT * FROM review where userid=#{userid}
	</select>
	

	
	<!-- 주문내역에서 보여질 상품 -->	
	<select id="getProductDTOsfile" parameterType="string" resultType="mybatis.ProductDTO">
		select * from product where p_code = #{p_code}
	</select>

	
	
	
	
</mapper>