<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mybatis.MybatisProductImpl">

	<!-- 리스트 (최근순) -->
	<select id="getStoreList" parameterType="int" resultType="mybatis.ProductDTO">
		SELECT * FROM product 
		WHERE p_idx<![CDATA[>=]]>#{defaultShow}
		ORDER BY p_idx DESC
	</select>
	
	<select id="getPagedList" parameterType="int" resultType="mybatis.ProductDTO">
		SELECT * FROM product 
		WHERE p_idx BETWEEN #{start} AND #{end}
		ORDER BY p_idx DESC
	</select>
	<!--  
		WHERE p_idx<![CDATA[>=]]>#{start}
	
	
		SELECT * FROM (
			SELECT ROWNUM AS idx, product.* FROM product ORDER BY p_idx DESC
		)
		WHERE idx BETWEEN #{start} AND #{end}
		
		SELECT a.*, rownum FROM product a
		WHERE rownum BETWEEN #{start} AND #{end}
		ORDER BY rownum DESC
	
	SELECT * FROM (SELECT ROWNUM AS NUM, NOTICE.* FROM NOTICE)
	WHERE NUM BETWEEN 5 AND 9;

		WHERE rownum <![CDATA[>]]>#{start} AND rownum<![CDATA[<=]]>#{end}

		WHERE rownum <![CDATA[>]]>178 AND rownum<![CDATA[<=]]>237
	
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM myboard
				<if test="searchTxt != null">
					WHERE 
					<foreach collection="searchTxt" item="str" open="(" close=")"
						separator="or">
						${searchField} like '%'||#{str}||'%'
					</foreach>
				</if>
				 ORDER BY idx DESC
			) Tb
		) 
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	-->	
		<!--  
		SELECT *
        FROM (
        SELECT ROW_NUMBER() OVER(ORDER by userCode DESC) AS
        row_num
        ,userCode
        ,userName
        FROM testTable
        )
        WHERE row_num BETWEEN 0 AND 10;
		
		SELECT * FROM product 
		WHERE p_idx<![CDATA[<]]>#{pageTo} AND p_idx<![CDATA[>=]]>#{pageFrom}
		ORDER BY p_idx DESC
		
		SELECT * FROM product 
		WHERE 
		ORDER BY p_idx DESC
		
		SELECT * FROM (
			SELECT Tb.*, ROWNUM rNum FROM(
				SELECT * FROM product 
				ORDER BY p_idx DESC
			) Tb 
		)WHERE rNum<![CDATA[>]]>#{pageNow} AND rNum<![CDATA[<]]>#{pageNow+60} 
		-->
	
	<!-- 
	AND rNum <![CDATA[<]]>#{pageNow + 1}
	
	WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	
	SELECT *
	FROM
	(
	SELECT ROW_NUMBER() OVER(ORDER BY ..) AS ROW_NUM,
	...
	)
	WHERE ROW_NUM BETWEEN (#{pageNumber} - 1) * (#{rowsPerPage} + 1) AND (#{pageNumber} * #{rowsPerPage})

	 -->
	
	<!-- 정렬 높은 가격 순 -->
	<select id="descPrice" resultType="mybatis.ProductDTO">
		SELECT * FROM product order by p_price desc
	</select>
	
	<!-- 정렬 낮은 가격 순 -->
	<select id="ascPrice" resultType="mybatis.ProductDTO">
		SELECT * FROM product order by p_price asc
	</select>
	
	<!-- 페이징 위한 총 갯수 카운트 -->
	<select id="getTotalCount" resultType="int">
		SELECT COUNT(*) from product
	</select>
	
	<!-- 상품 입력 -->
	<insert id="insertProduct" parameterType="mybatis.ProductDTO" >
		INSERT INTO product(p_idx, p_name, p_code, p_price, p_brand, p_ofile, p_sfile, p_flag)
		VALUES
		(product_seq.nextval, #{p_name}, #{p_code}, #{p_price}, #{p_brand}, #{p_ofile}, #{p_sfile}, #{p_flag})
	</insert>
	<!-- 디테일 입력 -->
	<insert id="insertDetail" parameterType="mybatis.ProductDetailDTO">
		INSERT INTO product_detail(p_code, pd_color, pd_size, pd_stock)
		VALUES (#{p_code}, #{pd_color}, #{pd_size}, #{pd_stock})
	</insert>
	
	<!-- product 에서 상세정보 가져오기 -->
	<select id="getStoreDetail" resultType="mybatis.ProductDTO">
		SELECT * FROM product WHERE p_idx=#{p_idx}
	</select>
	
	<!-- product_detail 에서 상세정보 사이즈 가져오기 -->
	<select id="getProductDetail" resultType="mybatis.ProductDetailDTO">
		SELECT * FROM product_detail WHERE p_code=#{p_code}
	</select>
	
	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="mybatis.ProductDTO" >
		UPDATE product SET p_name=#{p_name}, p_code=#{p_code}, p_price=#{p_price}, p_brand=#{p_brand}, p_ofile=#{p_ofile}, p_sfile=#{p_sfile} WHERE p_idx=#{p_idx}
	</update>
	
	<update id="updateDetail" parameterType="mybatis.ProductDetailDTO">
		UPDATE product_detail SET pd_color=#{pd_color}, pd_size=#{pd_size}, pd_stock=#{pd_stock} WHERE p_code=#{p_code}
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="deleteProduct">
		DELETE FROM product WHERE p_idx=#{p_idx}
	</delete>

	<!-- 리뷰들 불러오기 -->
	<select id="getReviews" resultType="mybatis.ReviewDTO">
		SELECT * FROM review WHERE p_code=#{p_code}
	</select>
	
	<!-- 리뷰쓰기 -->
	<insert id="insertReview" parameterType="mybatis.ReviewDTO" >
		INSERT INTO review(p_code, r_rate, r_content, userid, r_date, r_ofile, r_sfile, r_idx, rt_fabric, rt_fit, rt_size, rt_finish)
		VALUES
		(#{p_code}, #{r_rate}, #{r_content}, #{userid}, sysdate, #{r_ofile}, #{r_sfile}, review_seq.nextval, #{rt_fabric}, #{rt_fit}, #{rt_size}, #{rt_finish})
	</insert>

	<!-- 리뷰쓰기(첨부파일 없음) -->
	<insert id="insertReviewNoFile" parameterType="mybatis.ReviewDTO" >
		INSERT INTO review(p_code, r_rate, r_content, userid, r_date, r_idx, rt_fabric, rt_fit, rt_size, rt_finish)
		VALUES
		(#{p_code}, #{r_rate}, #{r_content}, #{userid}, sysdate, review_seq.nextval, #{rt_fabric}, #{rt_fit}, #{rt_size}, #{rt_finish})
	</insert>

	
	
	<!-- 리뷰 수정 -->
	<update id="updateReview" parameterType="mybatis.ReviewDTO">
		UPDATE review 
		SET p_rate=#{p_rate}, r_content=#{r_content}, r_date=#{sysdate}, r_ofile=#{r_ofile}, r_sfile=#{r_sfile}
		WHERE p_code=#{p_code}, r_code=#{r_code} AND userid=#{userid}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview">
		<!--  DELETE FROM review WHERE p_code=#{p_code}, r_code=#{r_code} AND userid=#{userid} -->
		DELETE FROM review WHERE r_idx=#{0}
	</delete>
	<select id="getPidx" >
		SELECT p_idx FROM product WHERE p_code=#{0}
	</select>
	
	
	<!-- 리뷰 페이지 진입시 띄울 정보 가져오기 -->
	<select id="reviewList" resultType="mybatis.ProductAndDetailDTO">
	 	SELECT * FROM product p INNER JOIN product_detail pd
   	 	ON p.p_code = pd.p_code WHERE p_idx = #{p_idx}
	</select>
	
	<!-- 구매내역과 리뷰페이지 버튼 보임/숨김 처리 연결 -->
	
	<select id="buyReview" resultType="mybatis.BuyAndGroupDTO">
	SELECT distinct bg.p_code as p_code, userid
	FROM product_detail P
	    INNER JOIN buy_group bg
	    ON P.p_code = bg.p_code
	    INNER JOIN buy b
	    ON bg.b_idx = b.b_idx
	WHERE userid = #{0} and bg.p_code = #{1}
	</select>
	
	

	
	
</mapper>