<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mybatis.MybatisProductImpl">

	<!-- 리스트 (최근순) -->
	<select id="getStoreList" resultType="mybatis.ProductDTO" parameterType="java.util.ArrayList" >
		SELECT * FROM product WHERE p_idx<![CDATA[>]]>117 ORDER BY p_idx DESC
		<!-- SELECT * FROM product where p_idx<![CDATA[<=]]>43 -->
		<!-- SELECT * FROM product where p_idx<![CDATA[<=]]>23 -->
	</select>
	
	<!-- 정렬 높은 가격 순 -->
	<select id="highToLow" resultType="mybatis.ProductDTO">
		SELECT * FROM product order by p_price desc
	</select>
	
	<!-- 정렬 낮은 가격 순 -->
	<select id="lowToHigh" resultType="mybatis.ProductDTO">
		SELECT * FROM product order by p_price asc
	</select>
	
	<!-- 페이징 위한 총 갯수 카운트 -->
	<select id="getTotalCount" resultType="int">
		SELECT COUNT(*) from product
	</select>
	
	<!-- 상품 입력 -->
	<!--  <insert id="insertProduct" parameterType="mybatis.ProductDTO"> -->
	<insert id="insertProduct" parameterType="mybatis.ProductDTO" >
		INSERT INTO product(p_idx, p_name, p_code, p_price, p_brand, p_ofile, p_sfile)
		VALUES
		(product_seq.nextval, #{p_name}, #{p_code}, #{p_price}, #{p_brand}, #{p_ofile}, #{p_sfile})
	</insert>
	
	<!-- product 에서 상세정보 가져오기 -->
	<select id="getStoreDetail" resultType="mybatis.ProductDTO">
		SELECT * FROM product WHERE p_idx=#{p_idx}
	</select>
	
	<!-- product_detail 에서 상세정보 사이즈 가져오기 -->
	<select id="getProductDetail" resultType="mybatis.ProductDetailDTO">
		SELECT * FROM product_detail WHERE p_code=#{p_code}
	</select>
	
	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="mybatis.ProductDTO" >
		UPDATE product SET p_name=#{p_name}, p_code=#{p_code}, p_price=#{p_price}, p_brand=#{p_brand}, p_ofile=#{p_ofile}, p_sfile=#{p_sfile} WHERE p_idx=#{p_idx}
	</update>
	
	<delete id="deleteProduct">
		DELETE FROM product WHERE p_idx=#{p_idx}
	</delete>

	<insert id="insertReview" parameterType="mybatis.ProductDTO" >
		INSERT INTO review(p_code, p_rate, r_content, userid, r_date, r_ofile, r_sfile, r_idx)
		VALUES
		(#{p_code}, #{p_rate}, #{r_content}, #{userid}, #{r_date}, #{r_ofile}, #{r_sfile}, review_seq.nextval)
	</insert>

</mapper>