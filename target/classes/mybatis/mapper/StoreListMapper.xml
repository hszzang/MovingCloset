<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mybatis.MybatisProductImpl">

	<select id="getProductDTO" resultType="mybatis.ProductDTO" >
		SELECT * FROM product
		<!-- SELECT * FROM product where p_idx<![CDATA[<=]]>10 -->
	</select>
	
	<!-- 리스트 -->
	<select id="getStoreList" resultType="mybatis.ProductDTO" parameterType="java.util.ArrayList" >
		SELECT * FROM product where p_idx<![CDATA[<=]]>43
		<!-- SELECT * FROM product where p_idx<![CDATA[<=]]>23 -->
	</select>
	
	<!-- 정렬 높은 가격 순 -->
	<select id="highToLow" resultType="mybatis.ProductDTO">
		SELECT * FROM product order by p_price desc
	</select>
	
	<!-- 정렬 낮은 가격 순 -->
	<select id="lowToHigh" resultType="mybatis.ProductDTO">
		SELECT * FROM product order by p_price asc
	</select>
	
	<!-- 페이징 위한 총 갯수 카운트 -->
	<select id="getTotalCount" resultType="int">
		SELECT COUNT(*) from product
	</select>
	
	<!-- 상품 입력 -->
	<!--  <insert id="insertProduct" parameterType="mybatis.ProductDTO"> -->
	<insert id="insertProduct" parameterType="mybatis.ProductDTO" >
		INSERT INTO product(p_idx, p_name, p_code, p_price, p_brand, p_ofile, p_sfile)
		VALUES
		(product_seq.nextval, #{p_name}, #{p_code}, #{p_price}, #{p_brand}, #{p_ofile}, #{p_sfile})
	</insert>
	
	<update id="updateProduct" parameterType="mybatis.ProductDTO" >
		UPDATE product #{p_name}, #{p_code}, #{p_price}, #{p_brand}, #{p_ofile} where p_idx=#{p_idx}
	</update>
	
	<!-- 리스트이 경우 collection="list"와 같이 파라미터명을 list로 쓰는게 룰 -->
<!-- 
	<select id="arrayListUse" resultType="mybatis.ProductDTO" parameterType="java.util.ArrayList">
		SELECT * FROM product
		WHERE
		<foreach collection="list" item="item" index="index" open="(" close=")" separator="or">
			name=#{item}
		</foreach>
		ORDER BY idx DESC
	</select>

 -->

</mapper>